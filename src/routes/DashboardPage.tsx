import { useMemo } from 'react';
import { useTours } from '../features/tours/hooks/useTours';
import { useInstructions } from '../features/instructions/hooks/useInstructions';
import { useSchemas } from '../features/schemas/hooks/useSchemas';
import { useExtractionLog } from '../features/extractions/hooks/useExtractionLog';
import { Card, CardContent, CardHeader, CardTitle } from '../components/common/Card';
import { LoadingState } from '../components/common/LoadingState';
import { ErrorState } from '../components/common/ErrorState';
import { EmptyState } from '../components/common/EmptyState';
import { StatusBadge } from '../components/common/StatusBadge';
import { Accordion } from '../components/common/Accordion';
import dayjs, { parseVietnamDate } from '../utils/dayjs';

const DashboardPage = () => {
  const { data: tours, isLoading: loadingTours, isError: toursError } = useTours();
  const { data: instructions, isLoading: loadingInstructions } = useInstructions();
  const { data: schemas } = useSchemas();
  const { data: extractions } = useExtractionLog();

  const upcomingTours = useMemo(() => {
    if (!tours) return [];
    return [...tours]
      .filter((tour) => {
        const start = parseVietnamDate(tour.ngay_bat_dau);
        return start.isValid() && start.isAfter(dayjs().subtract(1, 'day'));
      })
      .sort((a, b) => {
        const startA = parseVietnamDate(a.ngay_bat_dau);
        const startB = parseVietnamDate(b.ngay_bat_dau);
        return startA.valueOf() - startB.valueOf();
      })
      .slice(0, 5);
  }, [tours]);

  if (loadingTours || loadingInstructions) {
    return <LoadingState label="ƒêang t·∫£i t·ªïng quan h·ªá th·ªëng..." />;
  }

  if (toursError) {
    return <ErrorState message="Kh√¥ng th·ªÉ t·∫£i danh s√°ch tour." />;
  }

  const activeSchemaCount = schemas?.filter((schema) => schema.status === 'active').length ?? 0;
  const publishedInstructions = instructions?.filter((instruction) => instruction.status === 'active').length ?? 0;
  const totalExtractions = extractions?.length ?? 0;
  const validExtractions = extractions?.filter((item) => item.valid).length ?? 0;

  return (
    <div className="space-y-6">
      <div className="grid gap-6 md:grid-cols-2 xl:grid-cols-4">
        <Card>
          <CardContent>
            <p className="text-xs font-semibold uppercase tracking-wide text-primary-600">Tour n·ªôi b·ªô</p>
            <p className="mt-2 text-4xl font-bold text-slate-900">{tours?.length ?? 0}</p>
            <p className="mt-1 text-sm text-slate-500">T·ªïng s·ªë tour ƒë√£ l∆∞u trong Firestore</p>
          </CardContent>
        </Card>
        <Card>
          <CardContent>
            <p className="text-xs font-semibold uppercase tracking-wide text-primary-600">Prompt ƒëang d√πng</p>
            <p className="mt-2 text-4xl font-bold text-slate-900">{publishedInstructions}</p>
            <p className="mt-1 text-sm text-slate-500">H∆∞·ªõng d·∫´n ƒëang ho·∫°t ƒë·ªông</p>
          </CardContent>
        </Card>
        <Card>
          <CardContent>
            <p className="text-xs font-semibold uppercase tracking-wide text-primary-600">Schema ƒëang d√πng</p>
            <p className="mt-2 text-4xl font-bold text-slate-900">{activeSchemaCount}</p>
            <p className="mt-1 text-sm text-slate-500">Schema ki·ªÉm tra JSON ƒëang √°p d·ª•ng</p>
          </CardContent>
        </Card>
        <Card>
          <CardContent>
            <p className="text-xs font-semibold uppercase tracking-wide text-primary-600">Tr√≠ch xu·∫•t h·ª£p l·ªá</p>
            <p className="mt-2 text-4xl font-bold text-slate-900">{validExtractions}</p>
            <p className="mt-1 text-sm text-slate-500">/{totalExtractions} l·∫ßn g·ªçi Gemini th√†nh c√¥ng</p>
          </CardContent>
        </Card>
      </div>

      <div className="grid gap-6 lg:grid-cols-2">
        <Card className="h-full">
          <CardHeader>
            <CardTitle>
              <div>
                <p className="text-sm font-semibold uppercase tracking-wide text-primary-600">S·∫Øp di·ªÖn ra</p>
                <h2 className="text-xl font-semibold text-slate-900">L·ªãch tour trong tu·∫ßn</h2>
              </div>
            </CardTitle>
          </CardHeader>
          <CardContent>
            {upcomingTours.length === 0 ? (
              <EmptyState title="Ch∆∞a c√≥ tour s·∫Øp t·ªõi" description="T·∫°o tour m·ªõi ho·∫∑c nh·∫≠p t·ª´ Gemini." />
            ) : (
              <ul className="space-y-3">
                {upcomingTours.map((tour) => (
                  <li key={tour.id} className="rounded-xl border border-slate-200 bg-slate-50 px-4 py-3">
                    <div className="flex flex-wrap items-center justify-between gap-3">
                      <div>
                        <p className="text-sm font-semibold text-slate-900">{tour.thong_tin_chung.ma_tour || 'Tour n·ªôi b·ªô'}</p>
                        <p className="text-xs text-slate-500">
                          {tour.thong_tin_chung.ten_cong_ty || 'Kh√°ch l·∫ª'} ‚Ä¢ {tour.thong_tin_chung.ten_guide || 'Ch∆∞a c√≥ h∆∞·ªõng d·∫´n'}
                        </p>
                      </div>
                      <div className="text-right">
                        <p className="text-sm font-semibold text-slate-700">{tour.ngay_bat_dau}</p>
                        <p className="text-xs text-slate-500">{tour.tong_so_ngay_tour} ng√†y</p>
                      </div>
                    </div>
                  </li>
                ))}
              </ul>
            )}
          </CardContent>
        </Card>

        <Card className="h-full">
          <CardHeader>
            <CardTitle>
              <div>
                <p className="text-sm font-semibold uppercase tracking-wide text-primary-600">Tr√≠ch xu·∫•t Gemini</p>
                <h2 className="text-xl font-semibold text-slate-900">Nh·∫≠t k√Ω g·∫ßn ƒë√¢y</h2>
              </div>
            </CardTitle>
          </CardHeader>
          <CardContent>
            {extractions && extractions.length > 0 ? (
              <div className="space-y-3">
                {extractions.slice(0, 5).map((item) => (
                  <div key={item.id} className="rounded-xl border border-slate-200 bg-slate-50 px-4 py-3">
                    <div className="flex items-center justify-between gap-3">
                      <div>
                        <p className="text-sm font-semibold text-slate-900">{item.instructionId}</p>
                        <p className="text-xs text-slate-500">Schema v{item.schemaVersion} ‚Ä¢ Prompt v{item.promptVersion}</p>
                      </div>
                      <StatusBadge status={item.valid ? 'valid' : 'invalid'}>
                        {item.valid ? 'H·ª£p l·ªá' : 'Kh√¥ng h·ª£p l·ªá'}
                      </StatusBadge>
                    </div>
                    <p className="mt-2 text-xs text-slate-500">{item.createdAt ? dayjs(item.createdAt).format('DD/MM/YYYY HH:mm') : '‚Äî'}</p>
                  </div>
                ))}
              </div>
            ) : (
              <EmptyState title="Ch∆∞a c√≥ l·ªãch s·ª≠" description="Ch·∫°y th·ª≠ quy tr√¨nh tr√≠ch xu·∫•t AI ƒë·ªÉ xem nh·∫≠t k√Ω." />
            )}
          </CardContent>
        </Card>
      </div>

      {/* Accordion Demo Section */}
      <Card>
        <CardHeader>
          <CardTitle>
            <div>
              <p className="text-sm font-semibold uppercase tracking-wide text-primary-600">Th√¥ng tin chi ti·∫øt</p>
              <h2 className="text-xl font-semibold text-slate-900">T·ªïng quan h·ªá th·ªëng</h2>
            </div>
          </CardTitle>
        </CardHeader>
        <CardContent>
          <Accordion defaultOpenItems={[0]}>
            <Accordion.Item title="üìä Th·ªëng k√™ t·ªïng quan">
              <div className="space-y-4">
                <div className="grid gap-4 md:grid-cols-2">
                  <div className="rounded-lg bg-blue-50 p-4">
                    <h4 className="font-semibold text-blue-900 mb-2">Tours trong h·ªá th·ªëng</h4>
                    <p className="text-sm text-blue-700">
                      T·ªïng c·ªông c√≥ <strong>{tours?.length ?? 0}</strong> tour ƒë√£ ƒë∆∞·ª£c l∆∞u tr·ªØ trong Firestore.
                      Trong ƒë√≥ c√≥ <strong>{upcomingTours.length}</strong> tour s·∫Øp di·ªÖn ra trong tu·∫ßn t·ªõi.
                    </p>
                  </div>
                  <div className="rounded-lg bg-green-50 p-4">
                    <h4 className="font-semibold text-green-900 mb-2">T√¨nh tr·∫°ng AI Extraction</h4>
                    <p className="text-sm text-green-700">
                      T·ª∑ l·ªá th√†nh c√¥ng: <strong>{totalExtractions > 0 ? Math.round((validExtractions / totalExtractions) * 100) : 0}%</strong>
                      <br />
                      ({validExtractions}/{totalExtractions} l·∫ßn g·ªçi API th√†nh c√¥ng)
                    </p>
                  </div>
                </div>
              </div>
            </Accordion.Item>
            
            <Accordion.Item title="‚öôÔ∏è C·∫•u h√¨nh h·ªá th·ªëng">
              <div className="space-y-4">
                <div className="rounded-lg bg-slate-50 p-4">
                  <h4 className="font-semibold text-slate-900 mb-3">Prompt v√† Schema ƒëang s·ª≠ d·ª•ng</h4>
                  <div className="grid gap-3 md:grid-cols-2">
                    <div>
                      <p className="text-sm font-medium text-slate-700">Prompt Templates:</p>
                      <p className="text-lg font-bold text-slate-900">{publishedInstructions}</p>
                    </div>
                    <div>
                      <p className="text-sm font-medium text-slate-700">JSON Schemas:</p>
                      <p className="text-lg font-bold text-slate-900">{activeSchemaCount}</p>
                    </div>
                  </div>
                </div>
              </div>
            </Accordion.Item>
            
            <Accordion.Item title="üìù L·ªãch s·ª≠ ho·∫°t ƒë·ªông g·∫ßn ƒë√¢y">
              <div className="space-y-3">
                {extractions && extractions.length > 0 ? (
                  <>
                    <p className="text-sm text-slate-600 mb-3">
                      D∆∞·ªõi ƒë√¢y l√† c√°c ho·∫°t ƒë·ªông tr√≠ch xu·∫•t AI g·∫ßn ƒë√¢y nh·∫•t:
                    </p>
                    {extractions.slice(0, 3).map((item) => (
                      <div key={item.id} className="flex items-center justify-between p-3 bg-slate-50 rounded-lg">
                        <div>
                          <p className="font-medium text-slate-900">{item.instructionId}</p>
                          <p className="text-xs text-slate-500">
                            Schema v{item.schemaVersion} ‚Ä¢ Prompt v{item.promptVersion}
                          </p>
                        </div>
                        <div className="text-right">
                          <StatusBadge status={item.valid ? 'valid' : 'invalid'}>
                            {item.valid ? 'H·ª£p l·ªá' : 'Kh√¥ng h·ª£p l·ªá'}
                          </StatusBadge>
                          <p className="text-xs text-slate-500 mt-1">
                            {item.createdAt ? dayjs(item.createdAt).format('DD/MM HH:mm') : '‚Äî'}
                          </p>
                        </div>
                      </div>
                    ))}
                  </>
                ) : (
                  <div className="text-center py-6 text-slate-500">
                    <p>Ch∆∞a c√≥ ho·∫°t ƒë·ªông n√†o g·∫ßn ƒë√¢y</p>
                    <p className="text-sm">H√£y th·ª≠ s·ª≠ d·ª•ng t√≠nh nƒÉng AI Extraction ƒë·ªÉ xem nh·∫≠t k√Ω</p>
                  </div>
                )}
              </div>
            </Accordion.Item>
            
            <Accordion.Item title="üîß H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng">
              <div className="space-y-4">
                <div className="grid gap-4 md:grid-cols-2">
                  <div className="rounded-lg border border-amber-200 bg-amber-50 p-4">
                    <h4 className="font-semibold text-amber-900 mb-2">T·∫°o tour m·ªõi</h4>
                    <p className="text-sm text-amber-800">
                      1. V√†o trang "Tour Editor"<br />
                      2. Nh·∫≠p th√¥ng tin tour c∆° b·∫£n<br />
                      3. S·ª≠ d·ª•ng AI Extraction ƒë·ªÉ t·ª± ƒë·ªông ƒëi·ªÅn d·ªØ li·ªáu<br />
                      4. L∆∞u tour v√†o Firestore
                    </p>
                  </div>
                  <div className="rounded-lg border border-purple-200 bg-purple-50 p-4">
                    <h4 className="font-semibold text-purple-900 mb-2">Qu·∫£n l√Ω Schema</h4>
                    <p className="text-sm text-purple-800">
                      1. V√†o trang "Schema Editor"<br />
                      2. T·∫°o JSON schema m·ªõi<br />
                      3. K√≠ch ho·∫°t schema ƒë·ªÉ s·ª≠ d·ª•ng<br />
                      4. Schema s·∫Ω ƒë∆∞·ª£c d√πng ƒë·ªÉ validate d·ªØ li·ªáu
                    </p>
                  </div>
                </div>
              </div>
            </Accordion.Item>
          </Accordion>
        </CardContent>
      </Card>
    </div>
  );
};

export default DashboardPage;
